<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.hongguaninfo.wifiauth</groupId>
		<artifactId>wifiauth-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../parent/</relativePath>
	</parent>

	<artifactId>traffic</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>
	<name>traffic</name>
	<properties>
		<!-- 数据库语言 -->
		<sql.type>mysql</sql.type>

		<jdbc.driver.groupId>mysql</jdbc.driver.groupId>
		<jdbc.driver.artifactId>mysql-connector-java</jdbc.driver.artifactId>
		<jdbc.driver.version>5.1.21</jdbc.driver.version>
		<jdbc.driver>com.mysql.jdbc.Driver</jdbc.driver>
		<jdbc.url>jdbc:mysql://192.168.2.176:3306/db_wifi_dev?useUnicode=true&amp;characterEncoding=utf-8</jdbc.url>
		<jdbc.username>wifi</jdbc.username>
		<jdbc.password>wifi</jdbc.password>

		<skipTests>true</skipTests>
	</properties>
	<!-- 依赖项定义 -->
	<dependencies>
		<!-- hgdf -->
		<dependency>
			<groupId>com.hongguaninfo.hgdf</groupId>
			<artifactId>hgdf-core-utils</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- email/scheduler/freemarker -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<!-- AOP begin -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- AOP end -->

		<!-- PERSISTENCE begin -->
		<!-- hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>

		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
		</dependency>

		<!-- oracle 连接包 -->
		<dependency>
		<groupId>com.oracle</groupId>
		<artifactId>ojdbc6</artifactId>
		<version>11.2.0.1.0</version>
		</dependency>
		
		<!-- spring data access -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit-dep</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<!-- jdbc driver -->
		<dependency>
			<groupId>${jdbc.driver.groupId}</groupId>
			<artifactId>${jdbc.driver.artifactId}</artifactId>
			<version>${jdbc.driver.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
		</dependency>
		<!-- PERSISTENCE end -->

		<!-- WEB begin -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mrbean</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- sitemesh -->
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
		</dependency>
		<!-- WEB end -->

		<!-- SECURITY begin -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-ehcache</artifactId>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-jgroupsreplication</artifactId>
		</dependency>
		<!-- SECURITY end -->

		<!-- JSR303 BeanValidator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<!-- google java library -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>

		<!-- JSON begin -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-jaxb-annotations</artifactId>
		</dependency>
		<!-- JSON end -->

		<!-- LOGGING begin -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- LOGGING end -->

		<!-- template engine -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>
		
		<!-- 验证码 -->
		<dependency>
			<groupId>com.google.code</groupId>
			<artifactId>kaptcha</artifactId>
		</dependency>

		<!-- GENERAL UTILS begin -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<!-- GENERAL UTILS end -->

		<!-- 系统底层采集 -->
		<dependency>
			<groupId>org.fusesource</groupId>
			<artifactId>sigar</artifactId>
		</dependency>

		<!-- 压缩 -->
		<dependency>
			<groupId>com.googlecode.htmlcompressor</groupId>
			<artifactId>htmlcompressor</artifactId>
		</dependency>
		<dependency>
			<groupId>com.yahoo.platform.yui</groupId>
			<artifactId>yuicompressor</artifactId>
		</dependency>

		<!-- TEST begin -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- selenium 2.0 -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-htmlunit-driver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-android-driver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-iphone-driver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-safari-driver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-remote-driver</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>cglib</groupId>
					<artifactId>cglib-nodep</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- h2 -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- TEST end -->
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
		</dependency>
		<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>3.8</version>
			</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- svn version number -->
<!-- 			<plugin>
				<groupId>com.google.code.maven-svn-revision-number-plugin</groupId>
				<artifactId>maven-svn-revision-number-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<entries>
						<entry>
							<prefix>svn</prefix>
						</entry>
					</entries>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.tmatesoft.svnkit</groupId>
						<artifactId>svnkit</artifactId>
						<version>1.8.3-1</version>
					</dependency>
				</dependencies>
			</plugin> -->

			<!-- war打包插件, 设定war包名称不带版本号 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>${project.build.finalName}</warName>
					<!-- 排除掉未压缩js、css -->
					<warSourceExcludes>**/*.js,**/*.css,innerpage/**,WEB-INF/jsp/page/**,WEB-INF/jsp/sys/**</warSourceExcludes>
					<archive>
						<!-- 不把maven的依赖加入 -->
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<!-- addClasspath>true</addClasspath -->
							<addDefaultImplementationEntries>true
							</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true
							</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<DisableIBMJAXWSEngine>true</DisableIBMJAXWSEngine>
							<Mode>development</Mode>
							<Url>${project.url}</Url>
							<Project-Version>${project.version}</Project-Version>
							<Project-name>${project.name}</Project-name>
							<Build-Timestamp>${build.timestamp}</Build-Timestamp>
							<Build-directory>${project.build.directory}</Build-directory>
							<Build-java-home>${java.home}</Build-java-home>
							<Build-basedir>${basedir}</Build-basedir>
							<Build-localRepository>${settings.localRepository}
							</Build-localRepository>
							<Build-M2_HOME>${env.M2_HOME}</Build-M2_HOME>

							<Build-os-arch>${os.arch}</Build-os-arch>
							<Build-os-name>${os.name}</Build-os-name>
							<Build-os-version>${os.version}</Build-os-version>

							<svn-Revision>${svn.revision}</svn-Revision>
							<svn-repository>${svn.repository}</svn-repository>
							<svn-mixedRevisions>${svn.mixedRevisions}
							</svn-mixedRevisions>
							<svn-committedRevision>${svn.committedRevision}
							</svn-committedRevision>
							<svn-committedDate>${svn.committedDate}</svn-committedDate>
							<svn-status>${svn.status}</svn-status>
							<svn-specialStatus>${svn.specialStatus}</svn-specialStatus>

							<SCM-Revision>${buildNumber}</SCM-Revision>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- 打包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<executions>
					<execution>
						<id>copy-config</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>compile</phase>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/test/resources</directory>
									<includes>
										<include>uglify/*</include>
										<include>uglify/bin/*</include>
										<include>uglify/lib/*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- clean -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/WEB-INF/classes</directory>
							<directory>src/main/webapp/WEB-INF/lib</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!-- dependency -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- 使用jetty时注释掉 -->
							<outputDirectory>src/main/webapp/WEB-INF/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 增加functional test的Source目录 -->
<!-- 			<plugin> 
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-functional-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test/functional</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin> -->

			<!-- cobertura插件, 设置不需要计算覆盖率的类 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<configuration>
					<instrumentation>
						<excludes>
							<exclude>**/entity/**/*.class</exclude>
							<exclude>**/*Action.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>

			<!-- flyway 数据库版本控制 -->
			<plugin>
				<groupId>com.googlecode.flyway</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<configuration>
					<!-- <serverId>flyway-db</serverId> -->
					<validateOnMigrate>true</validateOnMigrate>
					<encoding>UTF-8</encoding>
					<initVersion>1.0</initVersion>
					<initDescription>Base Migration</initDescription>
					<skip>false</skip>
					<target>1.2</target>
				</configuration>
			</plugin>

			<!-- 跨环境配置替换插件 -->
			<plugin>
				<groupId>com.juvenxu.portable-config-maven-plugin</groupId>
				<artifactId>portable-config-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>replace-package</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<portableConfig>src/main/portable/${portable.config.type}.xml</portableConfig>
				</configuration>
			</plugin>

			<!-- cargo -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<configuration>
					<container>
						<containerId>tomcat7x</containerId>
						<type>remote</type>
					</container>
					<configuration>
						<type>runtime</type>
						<properties>
							<cargo.remote.username>${deploy.username}</cargo.remote.username>
							<cargo.remote.password>${deploy.password}</cargo.remote.password>
							<cargo.remote.uri>${deploy.url}</cargo.remote.uri>
						</properties>
					</configuration>
					<deployables>
						<deployable>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<type>war</type>
							<pingTimeout>30000</pingTimeout>
						</deployable>
					</deployables>
				</configuration>
			</plugin>

			<!-- tomcat7 -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<configuration>
					<url>${deploy.tomcat7.url}</url>
					<server>cargo-server</server>
					<update>true</update>
				</configuration>
			</plugin>

			<!-- jetty plugin -->
<!-- 			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webApp>
						<contextPath>/${project.artifactId}</contextPath>
						<jettyEnvXml>${basedir}/src/main/resources/jetty-env.xml</jettyEnvXml>
					</webApp>
					<connectors>  
                    <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">  
                        <port>8090</port>  
                        <maxIdleTime>60000</maxIdleTime>  
                    </connector>  
                </connectors>  
				</configuration>
			</plugin> -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.26</version>
				<configuration>
					<classesDirectory>target/classes</classesDirectory>
					<!-- This parameter will auto-deploy modified classes -->
					<scanIntervalSeconds>5</scanIntervalSeconds>
					<webAppSourceDirectory>src/main/webapp</webAppSourceDirectory>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
<!-- 					<webDefaultXml>src/test/resources/webdefault.xml</webDefaultXml> -->
					<connectors>
<!-- 						<connector implementation="org.mortbay.jetty.ajp.Ajp13SocketConnector">  -->
							<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8080</port>
						</connector>
					</connectors>
				</configuration>
				<!-- <dependencies>
					<dependency>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jetty-ajp</artifactId>
						<version>6.1.26</version>
					</dependency>
				</dependencies> -->
			</plugin>

			<!-- YUI Compressor -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>compress</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<encoding>UTF-8</encoding>
					<jswarn>false</jswarn>
					<force>true</force>
					<nosuffix>true</nosuffix>
					<linebreakpos>-1</linebreakpos>
					<includes>
						<include>**/*.js</include>
						<include>**/*.css</include>
					</includes>
					<excludes>
<!-- 						<exclude>**/**min.js</exclude> -->
<!-- 						<exclude>**/**min.css</exclude> -->
						<exclude>static/js/page/*.js</exclude>
						<exclude>static/js/sys/*.js</exclude>
					</excludes>
				</configuration>
			</plugin>
			
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="开始用uglifyjs压缩 JSP文件中的js代码. 请耐心等待！" />
								<property name="uglifyjs"
									value="${project.build.directory}/uglify/bin/uglifyjs" />
								<property name="jsp.compress.out.directory"
									value="${project.build.directory}/${project.build.finalName}/WEB-INF" />
								<property name="jsp.compress.directory" value="src/main/webapp/WEB-INF" />
								<apply executable="node" parallel="false" failonerror="true"
									dest="${jsp.compress.directory}">
									<fileset dir="${jsp.compress.directory}" includes="**/*.jsp" />
									<arg line=" ${uglifyjs}" />
									<arg line=" -\-ascii" />
									<arg line=" -o" />
									<targetfile />
									<srcfile />
									<mapper type="regexp" from="^(.*)\.(jsp)$" to="\1-min.\2" />
								</apply>
								<move todir="${jsp.compress.out.directory}">
									<fileset dir="${jsp.compress.directory}" includes="**/*.jsp" />
									<mapper type="regexp" from="^(.*)-min\.(jsp)$" to="\1.\2" />
								</move>
								<echo message="成功用uglifyjs压缩  JSP文件中的js代码!" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
	
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.2</version>
				<configuration>
					<verbose>true</verbose>
					<overwrite>true</overwrite>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- flyway -->
				<flyway.driver>${jdbc.driver}</flyway.driver>
				<flyway.url>${jdbc.url}</flyway.url>
				<flyway.user>${jdbc.username}</flyway.user>
				<flyway.password>${jdbc.password}</flyway.password>
				<!-- <flyway.schemas>WADP</flyway.schemas> -->
				<flyway.locations>db/migration/${sql.type}</flyway.locations>

				<!-- portable -->
				<portable.config.type>dev</portable.config.type>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<!-- portable -->
				<portable.config.type>test</portable.config.type>

				<!-- 部署 -->
				<deploy.username>cargo</deploy.username>
				<deploy.password>cargo</deploy.password>
				<deploy.url>http://192.168.2.181:8080/manager/text</deploy.url>

				<deploy.tomcat7.url>http://192.168.2.181:8080/manager/html</deploy.tomcat7.url>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<!-- portable -->
				<portable.config.type>prod</portable.config.type>
			</properties>
		</profile>
		<!-- 刷新开发环境数据库 -->
		<profile>
			<id>refresh-db</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<configuration>
							<target>
								<!-- <property file="src/main/resources/development.properties" /> -->
								<sql driver="${jdbc.driver}" url="${jdbc.url}" userid="${jdbc.username}"
									password="${jdbc.password}" onerror="continue"
									encoding="${project.build.sourceEncoding}">
									<classpath refid="maven.test.classpath" />
									<transaction
										src="src/main/resources/db/clean/${sql.type}/clean-schema.sql" />
									<transaction
										src="src/main/resources/db/migration/${sql.type}/V1_1__init-schema.sql" />
									<transaction
										src="src/main/resources/db/migration/${sql.type}/V1_2__init-data.sql" />
								</sql>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--打包可执行war包,基于Tomcat -->
		<profile>
			<id>standalone-tomcat</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>tomcat-run</id>
								<goals>
									<goal>exec-war-only</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<attachArtifactClassifier>standalone-tomcat</attachArtifactClassifier>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
